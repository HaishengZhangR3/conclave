apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    signing {
        enabled false
    }
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "Template Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "com.r3.conclave:conclave-client:$conclaveVersion"
    compile "com.r3.conclave:conclave-common:$conclaveVersion"
    compile "com.r3.conclave:conclave-mail:$conclaveVersion"
//    compile 'org.json:json:20171018'
//    compile 'com.google.code.gson:gson:2.8.6'
//
//    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
//    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
//    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
//    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
//    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version" //1.3.61?
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" //1.3.61?
    compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version" //1.3.61?
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    //kotlin-reflect-1.3.61.jar?? eddsa-0.3.0.jar?? annotations-13.0.jar??

    // CorDapp dependencies.
    cordapp project(":contracts")
}


task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}